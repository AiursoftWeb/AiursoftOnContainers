@using Microsoft.Azure.CognitiveServices.Search.WebSearch.Models;
@model SearchResponse
@{
    ViewData["Title"] = Model.QueryContext.OriginalQuery;
    ViewData["No Nav"] = "true";
}
<nav class="navbar navbar-expand-md navbar-light bg-white fixed-top">
    <div class="container">
        <a class="navbar-brand" href="/">
            @Values.ProjectName
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#aiursoft-navbar" aria-controls="aiursoft-navbar" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="aiursoft-navbar">
            <div class="navbar-nav mr-auto w-100">
                <form class="form-row w-100" asp-controller="Search" asp-action="DoSearch" method="get">
                    <div class="col-12 col-md-9 mb-2 mb-md-0">
                        <input type="text" name="q" class="form-control form-control-lg" autofocus required value="@Model.QueryContext.OriginalQuery">
                    </div>
                </form>
            </div>
            <div class="form-inline">
                <ul class="navbar-nav mr-auto">
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" id="dropdown02" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @await UserImageGenerator.RenderUserImageAsync(User)
                            </a>
                            <div class="dropdown-menu" aria-labelledby="dropdown02">
                                <a class="dropdown-item" href="@ServiceLocation.Account">@Localizer["Settings"]</a>
                                <a class="dropdown-item" data-toggle="modal" data-target="#exampleModal">@Localizer["Sign out"]</a>
                            </div>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item active">
                            <a class="nav-link" asp-controller="Auth" asp-action="GoAuth">
                                @Localizer["Sign in"]
                            </a>
                        </li>
                        <li class="nav-item active">
                            <a class="nav-link" asp-controller="Auth" asp-action="GoRegister">
                                @Localizer["Sign up"]
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</nav>

<div class="container">
    <div class="row pt-4">
        <div class="col-md-8">
            @if (!string.IsNullOrWhiteSpace(Model.QueryContext.AlteredQuery))
            {
                <h5>Showing results for <a asp-route-q="@Model.QueryContext.AlteredQuery">@Model.QueryContext.AlteredQuery</a></h5>
                <p>Search instead for <a asp-route-q="+@Model.QueryContext.OriginalQuery">@Model.QueryContext.OriginalQuery</a></p>
            }
            @foreach (var response in Model.RankingResponse.Mainline.Items)
            {
                @if (response.AnswerType == "WebPages")
                {
                    <vc:web-page page="@Model.WebPages.Value[response.ResultIndex ?? 0]"></vc:web-page>
                }
                else if (response.AnswerType == "RelatedSearches")
                {
                    <vc:related related="@Model.RelatedSearches"></vc:related>
                }
            }
        </div>
    </div>
    <div class="pl-1 mt-4">
        @Html.PagedListPager(new StaticPagedList<WebPage>(Model.WebPages.Value, (int)ViewBag.CurrentPage, 10, Convert.ToInt32(Model.WebPages.TotalEstimatedMatches ?? 0)), page => Url.Action("DoSearch", new { q = Model.QueryContext.OriginalQuery, page }))
    </div>
</div>