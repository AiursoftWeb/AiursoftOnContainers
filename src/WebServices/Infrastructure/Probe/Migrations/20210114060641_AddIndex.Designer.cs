// <auto-generated />
using Aiursoft.Probe.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace Aiursoft.Probe.Migrations
{
    [DbContext(typeof(ProbeDbContext))]
    [Migration("20210114060641_AddIndex")]
    partial class AddIndex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Aiursoft.Probe.SDK.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ContextId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("HardwareId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContextId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Aiursoft.Probe.SDK.Models.Folder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ContextId")
                        .HasColumnType("int");

                    b.Property<string>("FolderName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContextId");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("Aiursoft.Probe.SDK.Models.ProbeApp", b =>
                {
                    b.Property<string>("AppId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AppId");

                    b.ToTable("Apps");
                });

            modelBuilder.Entity("Aiursoft.Probe.SDK.Models.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AppId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OpenToDownload")
                        .HasColumnType("bit");

                    b.Property<bool>("OpenToUpload")
                        .HasColumnType("bit");

                    b.Property<int>("RootFolderId")
                        .HasColumnType("int");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AppId");

                    b.HasIndex("RootFolderId");

                    b.HasIndex("SiteName")
                        .IsUnique()
                        .HasFilter("[SiteName] IS NOT NULL");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("Aiursoft.Probe.SDK.Models.File", b =>
                {
                    b.HasOne("Aiursoft.Probe.SDK.Models.Folder", "Context")
                        .WithMany("Files")
                        .HasForeignKey("ContextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Context");
                });

            modelBuilder.Entity("Aiursoft.Probe.SDK.Models.Folder", b =>
                {
                    b.HasOne("Aiursoft.Probe.SDK.Models.Folder", "Context")
                        .WithMany("SubFolders")
                        .HasForeignKey("ContextId");

                    b.Navigation("Context");
                });

            modelBuilder.Entity("Aiursoft.Probe.SDK.Models.Site", b =>
                {
                    b.HasOne("Aiursoft.Probe.SDK.Models.ProbeApp", "Context")
                        .WithMany("Sites")
                        .HasForeignKey("AppId");

                    b.HasOne("Aiursoft.Probe.SDK.Models.Folder", "Root")
                        .WithMany()
                        .HasForeignKey("RootFolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Context");

                    b.Navigation("Root");
                });

            modelBuilder.Entity("Aiursoft.Probe.SDK.Models.Folder", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("SubFolders");
                });

            modelBuilder.Entity("Aiursoft.Probe.SDK.Models.ProbeApp", b =>
                {
                    b.Navigation("Sites");
                });
#pragma warning restore 612, 618
        }
    }
}
