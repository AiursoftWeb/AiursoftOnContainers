<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Two-factor authentication" xml:space="preserve">
    <value>双重身份验证</value>
  </data>
  <data name="Click the button below, and follow the prompts to start to configure your Two Factor Authentication function." xml:space="preserve">
    <value>单击下面的按钮，然后按照提示开始配置双因素身份验证功能。</value>
  </data>
  <data name="Configure two-factor authentication" xml:space="preserve">
    <value>配置双重身份验证</value>
  </data>
  <data name="x" xml:space="preserve">
    <value>x</value>
  </data>
  <data name="Two-factor authentication enabled!" xml:space="preserve">
    <value>启用双重身份验证！</value>
  </data>
  <data name="Your account is ready for two-factor authentication." xml:space="preserve">
    <value>您的帐户已准备好进行双重身份验证。</value>
  </data>
  <data name="Disable two-factor authentication" xml:space="preserve">
    <value>禁用双重身份验证</value>
  </data>
  <data name="Disable two-factor authentication allows others to log in your account with only your password." xml:space="preserve">
    <value>禁用双重身份验证允许其他人仅使用您的密码登录您的帐户。</value>
  </data>
  <data name="Recovery code" xml:space="preserve">
    <value>恢复代码</value>
  </data>
  <data name="You can log in through recovery codes when you can't use the authentication app." xml:space="preserve">
    <value>当无法使用身份验证应用时，可以通过恢复代码登录。</value>
  </data>
  <data name="Click the button below will generate new verification codes. Your old code will be invalid." xml:space="preserve">
    <value>单击下面的按钮将生成新的验证码。您的旧代码将无效。</value>
  </data>
  <data name="Reset and view recovery codes" xml:space="preserve">
    <value>重置和查看恢复代码</value>
  </data>
  <data name="Reset two-factor authentication key." xml:space="preserve">
    <value>重置双重身份验证密钥。</value>
  </data>
  <data name="Reset two-factor authentication will cause your current authticator app stop working. You need to re-setup your authenticator immediatly or you will lose access to your account. Only do this if your authenticator app was lost." xml:space="preserve">
    <value>重置双重身份验证将导致当前身份验证器应用停止工作。您需要立即重新设置身份验证器，否则您将无法访问您的帐户。仅当身份验证器应用丢失时，才执行此操作。</value>
  </data>
  <data name="Reset two-factor authentication key" xml:space="preserve">
    <value>重置双重身份验证密钥</value>
  </data>
</root>